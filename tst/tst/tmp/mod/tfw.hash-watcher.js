{"intl":"","src":"require( 'tfw.hash-watcher', function(exports, module) {  /**\n * The HASH is a very convenient way to deal with the browser history.\n * You can use the `:target` CSS selector, but there are few annoying caveats.\n * This module is a watcher for hash changes. Just pass it a callback as argument.\n * It will be called as soon as the hash changed.\n */\n\nvar lastHash = \"?\" + Date.now();\nvar timer = 0;\nvar slot = null;\nvar hash = '';\nvar args = [];\n\nmodule.exports = function(arg_slot) {\n  slot = arg_slot;\n  if (!timer) {\n    timer = window.setInterval(\n      function() {\n        var currentHash = window.location.hash;\n        if (lastHash == currentHash) return;\n        lastHash = currentHash;\n        if (typeof slot === 'function') {\n          if (currentHash.charAt(0) == '#') {\n            currentHash = currentHash.substr(1);\n          }\n          hash = currentHash;\n          while (currentHash.charAt(0) == '/') {\n            currentHash = currentHash.substr(1);\n          }\n          args = currentHash.split(\"/\");\n          slot.apply(slot, args);\n        } else {\n          // Stop timer.\n          window.clearTimeout(timer);\n          timer = 0;\n        }\n      },\n      50\n    );\n  }\n};\n\n\nmodule.exports.args = function() {\n  return args;\n};\n\nmodule.exports.hash = function() {\n  return hash;\n};\n\n });\n","zip":"require(\"tfw.hash-watcher\",function(t,n){var r=\"?\"+Date.now(),o=0,e=null,i=\"\",a=[];n.exports=function(t){e=t,o||(o=window.setInterval(function(){var t=window.location.hash;if(r!=t)if(r=t,\"function\"==typeof e){for(\"#\"==t.charAt(0)&&(t=t.substr(1)),i=t;\"/\"==t.charAt(0);)t=t.substr(1);a=t.split(\"/\"),e.apply(e,a)}else window.clearTimeout(o),o=0},50))},n.exports.args=function(){return a},n.exports.hash=function(){return i}});\n//# sourceMappingURL=tfw.hash-watcher.js.map","map":{"version":3,"file":"tfw.hash-watcher.js.map","sources":["tfw.hash-watcher.js"],"sourcesContent":["require( 'tfw.hash-watcher', function(exports, module) {  /**\n * The HASH is a very convenient way to deal with the browser history.\n * You can use the `:target` CSS selector, but there are few annoying caveats.\n * This module is a watcher for hash changes. Just pass it a callback as argument.\n * It will be called as soon as the hash changed.\n */\n\nvar lastHash = \"?\" + Date.now();\nvar timer = 0;\nvar slot = null;\nvar hash = '';\nvar args = [];\n\nmodule.exports = function(arg_slot) {\n  slot = arg_slot;\n  if (!timer) {\n    timer = window.setInterval(\n      function() {\n        var currentHash = window.location.hash;\n        if (lastHash == currentHash) return;\n        lastHash = currentHash;\n        if (typeof slot === 'function') {\n          if (currentHash.charAt(0) == '#') {\n            currentHash = currentHash.substr(1);\n          }\n          hash = currentHash;\n          while (currentHash.charAt(0) == '/') {\n            currentHash = currentHash.substr(1);\n          }\n          args = currentHash.split(\"/\");\n          slot.apply(slot, args);\n        } else {\n          // Stop timer.\n          window.clearTimeout(timer);\n          timer = 0;\n        }\n      },\n      50\n    );\n  }\n};\n\n\nmodule.exports.args = function() {\n  return args;\n};\n\nmodule.exports.hash = function() {\n  return hash;\n};\n\n });\n"],"names":["require","exports","module","lastHash","Date","now","timer","slot","hash","args","arg_slot","window","setInterval","currentHash","location","charAt","substr","split","apply","clearTimeout"],"mappings":"AAAAA,QAAS,mBAAoB,SAASC,EAASC,GAO/C,GAAIC,GAAW,IAAMC,KAAKC,MACtBC,EAAQ,EACRC,EAAO,KACPC,EAAO,GACPC,IAEJP,GAAOD,QAAU,SAASS,GACxBH,EAAOG,EACFJ,IACHA,EAAQK,OAAOC,YACb,WACE,GAAIC,GAAcF,OAAOG,SAASN,IAClC,IAAIL,GAAYU,EAEhB,GADAV,EAAWU,EACS,kBAATN,GAAqB,CAK9B,IAJ6B,KAAzBM,EAAYE,OAAO,KACrBF,EAAcA,EAAYG,OAAO,IAEnCR,EAAOK,EACyB,KAAzBA,EAAYE,OAAO,IACxBF,EAAcA,EAAYG,OAAO,EAEnCP,GAAOI,EAAYI,MAAM,KACzBV,EAAKW,MAAMX,EAAME,OAGjBE,QAAOQ,aAAab,GACpBA,EAAQ,GAGZ,MAMNJ,EAAOD,QAAQQ,KAAO,WACpB,MAAOA,IAGTP,EAAOD,QAAQO,KAAO,WACpB,MAAOA"},"dependencies":["mod/tfw.hash-watcher"]}