{"intl":"","src":"require( 'test.model.issue', function(exports, module) {  var WS = require(\"tfw.web-service\");\r\nvar Crud = require(\"smart-crud\");\r\n\r\n\r\nfunction Issue( attribs ) {\r\n    Crud.Model.call( this, attribs, [\"title\",\"content\",\"author\",\"date\",\"status\",\"type\"], [\"comments\",\"votes\",\"tags\"] );\r\n}\r\n\r\n// Inheritance from Widget\r\nIssue.prototype = Object.create(Crud.Model.prototype);\r\nIssue.prototype.constructor = Issue;\r\n\r\n\r\n\r\nmodule.exports.create = function( obj ) {\r\n    return WS.get( 'test.Issue.create' );\r\n};\r\n\r\nmodule.exports.request = function( criteria ) {\r\n    if( typeof criteria === 'undefined' ) criteria = {};\r\n    return new Promise(function( resolve, reject ) {\r\n        WS.get( 'test.Issue.request', criteria ).then(\r\n            function( data ) {\r\n                var parsedRows = [];\r\nconsole.info(\"[javascript-glue] data.rows=...\", data.rows);\r\n                var id, row;\r\n                for( id in data.rows ) {\r\n                    row = data.rows[id];\r\n                    parsedRows.push(new Issue({ \r\n                        id: id,\n                        \"title\": row[0],\n                        \"content\": row[1],\n                        \"author\": row[2],\n                        \"date\": row[3],\n                        \"status\": row[4],\n                        \"type\": row[5],\n                        \"comments\": row[6],\n                        \"votes\": row[7],\n                        \"tags\": row[8]\r\n                    }));\r\n                };\r\n            }, reject\r\n        );\r\n    });\r\n};\r\n\r\nmodule.exports.update = function( obj ) {\r\n    return WS.get( 'test.Issue.update' );\r\n};\r\n\r\nmodule.exports.delete = function( id ) {\r\n    return WS.get( 'test.Issue.delete' );\r\n};\r\n });\r\n","zip":"require(\"test.model.issue\",function(t,e){function r(t){o.Model.call(this,t,[\"title\",\"content\",\"author\",\"date\",\"status\",\"type\"],[\"comments\",\"votes\",\"tags\"])}var s=require(\"tfw.web-service\"),o=require(\"smart-crud\");r.prototype=Object.create(o.Model.prototype),r.prototype.constructor=r,e.exports.create=function(t){return s.get(\"test.Issue.create\")},e.exports.request=function(t){return\"undefined\"==typeof t&&(t={}),new Promise(function(e,o){s.get(\"test.Issue.request\",t).then(function(t){var e=[];console.info(\"[javascript-glue] data.rows=...\",t.rows);var s,o;for(s in t.rows)o=t.rows[s],e.push(new r({id:s,title:o[0],content:o[1],author:o[2],date:o[3],status:o[4],type:o[5],comments:o[6],votes:o[7],tags:o[8]}))},o)})},e.exports.update=function(t){return s.get(\"test.Issue.update\")},e.exports[\"delete\"]=function(t){return s.get(\"test.Issue.delete\")}});\n//# sourceMappingURL=test.model.issue.js.map","map":{"version":3,"file":"test.model.issue.js.map","sources":["test.model.issue.js"],"sourcesContent":["require( 'test.model.issue', function(exports, module) {  var WS = require(\"tfw.web-service\");\r\nvar Crud = require(\"smart-crud\");\r\n\r\n\r\nfunction Issue( attribs ) {\r\n    Crud.Model.call( this, attribs, [\"title\",\"content\",\"author\",\"date\",\"status\",\"type\"], [\"comments\",\"votes\",\"tags\"] );\r\n}\r\n\r\n// Inheritance from Widget\r\nIssue.prototype = Object.create(Crud.Model.prototype);\r\nIssue.prototype.constructor = Issue;\r\n\r\n\r\n\r\nmodule.exports.create = function( obj ) {\r\n    return WS.get( 'test.Issue.create' );\r\n};\r\n\r\nmodule.exports.request = function( criteria ) {\r\n    if( typeof criteria === 'undefined' ) criteria = {};\r\n    return new Promise(function( resolve, reject ) {\r\n        WS.get( 'test.Issue.request', criteria ).then(\r\n            function( data ) {\r\n                var parsedRows = [];\r\nconsole.info(\"[javascript-glue] data.rows=...\", data.rows);\r\n                var id, row;\r\n                for( id in data.rows ) {\r\n                    row = data.rows[id];\r\n                    parsedRows.push(new Issue({ \r\n                        id: id,\n                        \"title\": row[0],\n                        \"content\": row[1],\n                        \"author\": row[2],\n                        \"date\": row[3],\n                        \"status\": row[4],\n                        \"type\": row[5],\n                        \"comments\": row[6],\n                        \"votes\": row[7],\n                        \"tags\": row[8]\r\n                    }));\r\n                };\r\n            }, reject\r\n        );\r\n    });\r\n};\r\n\r\nmodule.exports.update = function( obj ) {\r\n    return WS.get( 'test.Issue.update' );\r\n};\r\n\r\nmodule.exports.delete = function( id ) {\r\n    return WS.get( 'test.Issue.delete' );\r\n};\r\n });\r\n"],"names":["require","exports","module","Issue","attribs","Crud","Model","call","this","WS","prototype","Object","create","constructor","obj","get","request","criteria","Promise","resolve","reject","then","data","parsedRows","console","info","rows","id","row","push","title","content","author","date","status","type","comments","votes","tags","update"],"mappings":"AAAAA,QAAS,mBAAoB,SAASC,EAASC,GAI/C,QAASC,GAAOC,GACZC,EAAKC,MAAMC,KAAMC,KAAMJ,GAAU,QAAQ,UAAU,SAAS,OAAO,SAAS,SAAU,WAAW,QAAQ,SALnD,GAAIK,GAAKT,QAAQ,mBACvEK,EAAOL,QAAQ,aAQnBG,GAAMO,UAAYC,OAAOC,OAAOP,EAAKC,MAAMI,WAC3CP,EAAMO,UAAUG,YAAcV,EAI9BD,EAAOD,QAAQW,OAAS,SAAUE,GAC9B,MAAOL,GAAGM,IAAK,sBAGnBb,EAAOD,QAAQe,QAAU,SAAUC,GAE/B,MADwB,mBAAbA,KAA2BA,MAC/B,GAAIC,SAAQ,SAAUC,EAASC,GAClCX,EAAGM,IAAK,qBAAsBE,GAAWI,KACrC,SAAUC,GACN,GAAIC,KACpBC,SAAQC,KAAK,kCAAmCH,EAAKI,KACrC,IAAIC,GAAIC,CACR,KAAKD,IAAML,GAAKI,KACZE,EAAMN,EAAKI,KAAKC,GAChBJ,EAAWM,KAAK,GAAI1B,IAChBwB,GAAIA,EACJG,MAASF,EAAI,GACbG,QAAWH,EAAI,GACfI,OAAUJ,EAAI,GACdK,KAAQL,EAAI,GACZM,OAAUN,EAAI,GACdO,KAAQP,EAAI,GACZQ,SAAYR,EAAI,GAChBS,MAAST,EAAI,GACbU,KAAQV,EAAI,OAGrBR,MAKflB,EAAOD,QAAQsC,OAAS,SAAUzB,GAC9B,MAAOL,GAAGM,IAAK,sBAGnBb,EAAOD,QAAPC,UAAwB,SAAUyB,GAC9B,MAAOlB,GAAGM,IAAK"},"dependencies":["mod/test.model.issue","mod/tfw.web-service","mod/smart-crud"]}