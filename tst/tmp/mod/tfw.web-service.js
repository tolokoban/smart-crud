{"intl":"var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n","src":"/** @module tfw.web-service */require( 'tfw.web-service', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    \"use strict\";\n\nexports.BAD_ROLE = -1;\nexports.BAD_TYPE = -2;\nexports.CONNECTION_FAILURE = -3;\nexports.MISSING_AUTOLOGIN = -4;\nexports.UNKNOWN_USER = -5;\nexports.HTTP_ERROR = -6;\n\n/**\n * Call a webservice.\n * @param {string} name - Service's name.\n * @param {object} args - Service's arguments.\n * @param {string=undefined} url - You can define your own URL to your `svc.php` file.\n */\nexports.get = callWebService;\n/**\n * @return {boolean}\n */\nexports.isAdmin = isAdmin;\n/**\n * @param {string} role - Role's name.\n * @return {boolean}\n */\nexports.hasRole = hasRole;\n/**\n * @return Current user.\n */\nexports.user = user;\n/*\n * Load a JSON file and return a Promise.\n * @param {string} path Local path relative to the current HTML page.\n */\nexports.loadJSON = loadJSON;\n/**\n * Event fired when login status has changed.\n * @type {tfw.listeners}\n */\nexports.eventChange = new (require( \"tfw.listeners\" ))();\nexports.changeEvent = exports.eventChange;\n/**\n * @return If there is a user connected or not.\n */\nexports.isLogged = isLogged;\n/**\n * Disconnect current user.\n * @return {Promise} A _thenable_ object resolved as soon as the server answered.\n */\nexports.logout = logout;\n/**\n * Try to connect a user.\n * @param {string} usr Login name.\n * @param {string} pwd Password.\n * @return {Promise}\n *\n */\nexports.login = login;\n/**\n * @param {string} key\n * @param {any} val\n */\nexports.config = configGetSet;\n\n\nObject.defineProperty( exports, 'userData', {\n  get: function () {\n    if ( currentUser ) return currentUser.data || {};\n    return {};\n  },\n  set: function () {},\n  configurable: true,\n  enumerable: true\n} );\n\n\n\n\n\n\nrequire( \"polyfill.promise\" );\nvar Cfg = require( \"$\" ).config;\n\nvar Storage = require( \"tfw.storage\" );\n\nvar currentUser = null;\nvar config = {\n  // In `package.json`, you can override the services URL.\n  // { \"tfw\": { \"consts\": { \"debug\": \"tfw\", \"release\": \"http://tolokoban.org/tfw\" } } }\n  url: typeof Cfg.consts.tfw === 'string' ? Cfg.consts.tfw : \"tfw\"\n};\nvar saved = Storage.local.get( \"nigolotua\" );\nif ( Array.isArray( saved ) ) {\n  config.usr = saved[ 0 ];\n  config.pwd = saved[ 1 ];\n}\n\nfunction svc( name, args, url ) {\n  console.info( \"[tfw.web-service]\", name, args );\n  return new Promise(\n    function ( resolve, reject ) {\n      if ( typeof url === 'undefined' ) url = config.url;\n      var that = this;\n      var xhr = new XMLHttpRequest( {\n        mozSystem: true\n      } );\n      if ( 'withCredentials' in xhr ) {\n        xhr.open( \"POST\", url + \"/svc.php\", true );\n        xhr.withCredentials = true; // Indispensable pour le CORS.\n      } else {\n        // IE\n        xhr = new XDomainRequest();\n        xhr.open( \"POST\", url + \"/svc.php\" );\n      }\n      xhr.onload = function () {\n        if ( xhr.status != 200 ) {\n          return reject( {\n            id: exports.HTTP_ERROR,\n            msg: \"(\" + xhr.status + \") \" + xhr.statusText,\n            status: xhr.status\n          } );\n        }\n        var value = xhr.responseText;\n        if ( typeof value === \"string\" ) {\n          if ( value.substr( 0, 1 ) == \"!\" ) {\n            reject( {\n              id: exports.BAD_ROLE,\n              err: Error( \"Service \\\"\" + name + \"\\\" needs role \\\"\" +\n                          value.substr( 1 ) + \"\\\"!\" )\n            } );\n          }\n          var valueObject;\n          try {\n            valueObject = JSON.parse( value );\n          } catch ( ex ) {\n            console.error( \"[tfw.web-service:svc] Value = \", value );\n            reject( {\n              id: exports.BAD_TYPE,\n              err: Error( \"Service \\\"\" + name +\n                          \"\\\" should return a valid JSON!\\n\" + ex )\n            } );\n          }\n          resolve( valueObject );\n        } else {\n          reject( {\n            id: exports.BAD_TYPE,\n            err: Error( \"Service \\\"\" + name + \"\\\" should return a string!\" )\n          } );\n        }\n      };\n      xhr.onerror = function () {\n        reject( {\n          id: exports.HTTP_ERROR,\n          err: \"HTTP_ERROR (\" + xhr.status + \") \" + xhr.statusText,\n          status: xhr.status\n        } );\n      };\n      var params = \"s=\" + encodeURIComponent( name );\n      if ( typeof args !== 'undefined' ) {\n        params += \"&i=\" + encodeURIComponent( JSON.stringify( args ) );\n      }\n      xhr.setRequestHeader(\n        \"Content-type\",\n        \"application/x-www-form-urlencoded\" );\n      xhr.withCredentials = true; // Indispensable pour le CORS.\n      xhr.send( params );\n    }\n  );\n}\n/**\n * Load a JSON file and return a Promise.\n * @param {string} path Local path relative to the current HTML page.\n */\nfunction loadJSON( path ) {\n  return new Promise( function ( resolve, reject ) {\n    var xhr = new XMLHttpRequest( {\n      mozSystem: true\n    } );\n    xhr.onload = function () {\n      var text = xhr.responseText;\n      try {\n        resolve( JSON.parse( text ) );\n      } catch ( ex ) {\n        reject( Error( \"Bad JSON format for \\\"\" + path + \"\\\"!\\n\" + ex + \"\\n\" + text ) );\n      }\n    };\n    xhr.onerror = function () {\n      reject( Error( \"Unable to load file \\\"\" + path + \"\\\"!\\n\" + xhr.statusText ) );\n    };\n    xhr.open( \"GET\", path, true );\n    xhr.withCredentials = true; // Indispensable pour le CORS.\n    xhr.send();\n  } );\n};\n\n\n/**\n * @return If there is a user connected or not.\n */\nfunction isLogged() {\n  if ( !currentUser ) return false;\n  return true;\n};\n\n/**\n * Disconnect current user.\n * @return {Promise} A _thenable_ object resolved as soon as the server answered.\n */\nfunction logout() {\n  currentUser = null;\n  delete config.usr;\n  delete config.pwd;\n  Storage.local.set( \"nigolotua\", null );\n  exports.eventChange.fire();\n  return svc( \"tfw.login.Logout\" );\n};\n\n/**\n * Try to connect a user.\n * @param {string} usr Login name.\n * @param {string} pwd Password.\n * @return {Promise}\n *\n */\nfunction login( usr, pwd ) {\n  if ( typeof usr === 'undefined' ) usr = config.usr;\n  if ( typeof pwd === 'undefined' ) pwd = config.pwd;\n\n  return new Promise(\n    function ( resolve, reject ) {\n      if ( typeof usr === 'undefined' ) {\n        var autologin = Storage.local.get( \"nigolotua\" );\n        if ( !Array.isArray( autologin ) ) return reject( {\n          id: exports.MISSING_AUTOLOGIN\n        } );\n        usr = autologin[ 0 ];\n        pwd = autologin[ 1 ];\n      }\n      Storage.local.set( \"nigolotua\", null );\n      svc( \"tfw.login.Challenge\", usr )\n        .then(\n          function ( code ) {\n            // Hashage du mot de passe Ã  l'aide du code.\n            var output = [\n              0, 0, 0, 0,\n              0, 0, 0, 0,\n              0, 0, 0, 0,\n              0, 0, 0, 0\n            ],\n                i, j = 0,\n                pass = [],\n                k1, k2, k3;\n            for ( i = 0; i < pwd.length; i++ ) {\n              pass.push( pwd.charCodeAt( i ) );\n            }\n            if ( 256 % pass.length == 0 ) {\n              pass.push( 0 );\n            }\n\n            for ( i = 0; i < 256; i++ ) {\n              output[ i % 16 ] ^= i + pass[ i % pass.length ];\n              k1 = code[ j++ % code.length ] % 16;\n              k2 = code[ j++ % code.length ] % 16;\n              k3 = code[ j++ % code.length ] % 16;\n              output[ k3 ] ^= ( output[ k3 ] + 16 * k2 + k3 ) % 256;\n              output[ k2 ] ^= ( output[ k1 ] + output[ k3 ] ) % 256;\n            }\n            return svc( \"tfw.login.Response\", output );\n          },\n          reject\n        )\n        .then(\n          function ( user ) {\n            console.info( \"[tfw.web-service] user=...\", user );\n            if ( typeof user === 'object' ) {\n              currentUser = {\n                data: user,\n                hasRole: function ( role ) {\n                  for ( var i = 0; i < user.roles.length; i++ ) {\n                    var item = user.roles[ i ];\n                    if ( item == role ) return true;\n                  }\n                  return false;\n                }\n              };\n              Storage.local.set( \"nigolotua\", [ usr, pwd ] );\n              exports.eventChange.fire();\n              resolve( user );\n            } else {\n              currentUser = null;\n              reject( {\n                id: exports.UNKNOWN_USER,\n                err: \"Unknown user '\" + usr + \"'!\"\n              } );\n            }\n          },\n          reject\n        );\n    }\n  );\n};\n\n/**\n * Call a webservice.\n */\nfunction callWebService( name, args, url ) {\n  return new Promise(\n    function ( resolve, reject ) {\n      svc( name, args, url ).then(\n        resolve,\n        function ( err ) {\n          if ( typeof err === 'object' && err.id == exports.BAD_ROLE ) {\n            // Echec de connexion, on retente de se connecter avant d'abandonner.\n            login().then(\n              function () {\n                svc( name, args, url ).then( resolve, reject );\n              },\n              reject\n            );\n          } else {\n            reject( err );\n          }\n        }\n      );\n    }\n  );\n};\n\nfunction isAdmin() {\n  return hasRole( 'ADMIN' );\n};\n\nfunction hasRole( role ) {\n  if ( !currentUser ) return false;\n  return currentUser.hasRole( role );\n};\n\nfunction user () { return currentUser; };\n\nfunction configGetSet( key, val ) {\n  if ( typeof val === 'undefined' ) {\n    return config[ key ];\n  }\n  config[ key ] = val;\n  return val;\n};\n\n// _Backward compatibility.\nif ( window.$$ ) {\n  window.$$.service = function ( name, args, caller, onSuccess, onError ) {\n    var p = exports.get( name, args );\n    p.then(\n      function ( value ) {\n        if ( onSuccess ) {\n          return caller[ onSuccess ].call( caller, value );\n        }\n        return value;\n      },\n      function ( reason ) {\n        if ( onError ) {\n          return caller[ onError ].call( caller, reason );\n        }\n        return reason;\n      }\n    );\n  };\n}\n\n\nvar properties = {\n  userID: function () {\n    if ( !currentUser ) return 0;\n    return currentUser.data.id;\n  },\n  userLogin: function () {\n    if ( !currentUser ) return null;\n    return currentUser.data.login;\n  },\n  userName: function () {\n    if ( !currentUser ) return null;\n    return currentUser.data.name;\n  }\n};\n\nfor ( var key in properties ) {\n  Object.defineProperty( exports, key, {\n    get: properties[ key ],\n    set: function ( v ) {\n      throw Error( \"Property \" + key + \" is read-only!\" );\n    },\n    configurable: true,\n    enumerable: true\n  } );\n}\n\n\n  \nmodule.exports._ = _;\n/**\n * @module tfw.web-service\n * @see module:$\n * @see module:tfw.listeners\n * @see module:polyfill.promise\n * @see module:$\n * @see module:tfw.storage\n\n */\n});","zip":"require(\"tfw.web-service\",function(e,n,t){function r(e,n,r){return console.info(\"[tfw.web-service]\",e,n),new Promise(function(o,i){void 0===r&&(r=p.url);var u=new XMLHttpRequest({mozSystem:!0});\"withCredentials\"in u?(u.open(\"POST\",r+\"/svc.php\",!0),u.withCredentials=!0):(u=new XDomainRequest,u.open(\"POST\",r+\"/svc.php\")),u.onload=function(){if(200!=u.status)return i({id:t.HTTP_ERROR,msg:\"(\"+u.status+\") \"+u.statusText,status:u.status});var n=u.responseText;if(\"string\"==typeof n){\"!\"==n.substr(0,1)&&i({id:t.BAD_ROLE,err:Error('Service \"'+e+'\" needs role \"'+n.substr(1)+'\"!')});var r;try{r=JSON.parse(n)}catch(r){console.error(\"[tfw.web-service:svc] Value = \",n),i({id:t.BAD_TYPE,err:Error('Service \"'+e+'\" should return a valid JSON!\\n'+r)})}o(r)}else i({id:t.BAD_TYPE,err:Error('Service \"'+e+'\" should return a string!')})},u.onerror=function(){i({id:t.HTTP_ERROR,err:\"HTTP_ERROR (\"+u.status+\") \"+u.statusText,status:u.status})};var s=\"s=\"+encodeURIComponent(e);void 0!==n&&(s+=\"&i=\"+encodeURIComponent(JSON.stringify(n))),u.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"),u.withCredentials=!0,u.send(s)})}function o(e){return new Promise(function(n,t){var r=new XMLHttpRequest({mozSystem:!0});r.onload=function(){var o=r.responseText;try{n(JSON.parse(o))}catch(n){t(Error('Bad JSON format for \"'+e+'\"!\\n'+n+\"\\n\"+o))}},r.onerror=function(){t(Error('Unable to load file \"'+e+'\"!\\n'+r.statusText))},r.open(\"GET\",e,!0),r.withCredentials=!0,r.send()})}function i(){return!!h}function u(){return h=null,delete p.usr,delete p.pwd,v.local.set(\"nigolotua\",null),t.eventChange.fire(),r(\"tfw.login.Logout\")}function s(e,n){return void 0===e&&(e=p.usr),void 0===n&&(n=p.pwd),new Promise(function(o,i){if(void 0===e){var u=v.local.get(\"nigolotua\");if(!Array.isArray(u))return i({id:t.MISSING_AUTOLOGIN});e=u[0],n=u[1]}v.local.set(\"nigolotua\",null),r(\"tfw.login.Challenge\",e).then(function(e){var t,o,i,u,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],a=0,l=[];for(t=0;t<n.length;t++)l.push(n.charCodeAt(t));for(256%l.length==0&&l.push(0),t=0;t<256;t++)s[t%16]^=t+l[t%l.length],o=e[a++%e.length]%16,i=e[a++%e.length]%16,u=e[a++%e.length]%16,s[u]^=(s[u]+16*i+u)%256,s[i]^=(s[o]+s[u])%256;return r(\"tfw.login.Response\",s)},i).then(function(r){console.info(\"[tfw.web-service] user=...\",r),\"object\"==typeof r?(h={data:r,hasRole:function(e){for(var n=0;n<r.roles.length;n++){if(r.roles[n]==e)return!0}return!1}},v.local.set(\"nigolotua\",[e,n]),t.eventChange.fire(),o(r)):(h=null,i({id:t.UNKNOWN_USER,err:\"Unknown user '\"+e+\"'!\"}))},i)})}function a(e,n,o){return new Promise(function(i,u){r(e,n,o).then(i,function(a){\"object\"==typeof a&&a.id==t.BAD_ROLE?s().then(function(){r(e,n,o).then(i,u)},u):u(a)})})}function l(){return c(\"ADMIN\")}function c(e){return!!h&&h.hasRole(e)}function f(){return h}function d(e,n){return void 0===n?p[e]:(p[e]=n,n)}var g=function(){function n(){return r(t,arguments)}var t={en:{}},r=e(\"$\").intl;return n.all=t,n}();t.BAD_ROLE=-1,t.BAD_TYPE=-2,t.CONNECTION_FAILURE=-3,t.MISSING_AUTOLOGIN=-4,t.UNKNOWN_USER=-5,t.HTTP_ERROR=-6,t.get=a,t.isAdmin=l,t.hasRole=c,t.user=f,t.loadJSON=o,t.eventChange=new(e(\"tfw.listeners\")),t.changeEvent=t.eventChange,t.isLogged=i,t.logout=u,t.login=s,t.config=d,Object.defineProperty(t,\"userData\",{get:function(){return h?h.data||{}:{}},set:function(){},configurable:!0,enumerable:!0}),e(\"polyfill.promise\");var w=e(\"$\").config,v=e(\"tfw.storage\"),h=null,p={url:\"string\"==typeof w.consts.tfw?w.consts.tfw:\"tfw\"},R=v.local.get(\"nigolotua\");Array.isArray(R)&&(p.usr=R[0],p.pwd=R[1]),window.$$&&(window.$$.service=function(e,n,r,o,i){t.get(e,n).then(function(e){return o?r[o].call(r,e):e},function(e){return i?r[i].call(r,e):e})});var O={userID:function(){return h?h.data.id:0},userLogin:function(){return h?h.data.login:null},userName:function(){return h?h.data.name:null}};for(var E in O)Object.defineProperty(t,E,{get:O[E],set:function(e){throw Error(\"Property \"+E+\" is read-only!\")},configurable:!0,enumerable:!0});n.exports._=g});\n//# sourceMappingURL=tfw.web-service.js.map","map":{"version":3,"file":"tfw.web-service.js","sources":["tfw.web-service.js"],"sourcesContent":["/** @module tfw.web-service */require( 'tfw.web-service', function(require, module, exports) { var _=function(){var D={\"en\":{}},X=require(\"$\").intl;function _(){return X(D,arguments);}_.all=D;return _}();\n    \"use strict\";\n\nexports.BAD_ROLE = -1;\nexports.BAD_TYPE = -2;\nexports.CONNECTION_FAILURE = -3;\nexports.MISSING_AUTOLOGIN = -4;\nexports.UNKNOWN_USER = -5;\nexports.HTTP_ERROR = -6;\n\n/**\n * Call a webservice.\n * @param {string} name - Service's name.\n * @param {object} args - Service's arguments.\n * @param {string=undefined} url - You can define your own URL to your `svc.php` file.\n */\nexports.get = callWebService;\n/**\n * @return {boolean}\n */\nexports.isAdmin = isAdmin;\n/**\n * @param {string} role - Role's name.\n * @return {boolean}\n */\nexports.hasRole = hasRole;\n/**\n * @return Current user.\n */\nexports.user = user;\n/*\n * Load a JSON file and return a Promise.\n * @param {string} path Local path relative to the current HTML page.\n */\nexports.loadJSON = loadJSON;\n/**\n * Event fired when login status has changed.\n * @type {tfw.listeners}\n */\nexports.eventChange = new (require( \"tfw.listeners\" ))();\nexports.changeEvent = exports.eventChange;\n/**\n * @return If there is a user connected or not.\n */\nexports.isLogged = isLogged;\n/**\n * Disconnect current user.\n * @return {Promise} A _thenable_ object resolved as soon as the server answered.\n */\nexports.logout = logout;\n/**\n * Try to connect a user.\n * @param {string} usr Login name.\n * @param {string} pwd Password.\n * @return {Promise}\n *\n */\nexports.login = login;\n/**\n * @param {string} key\n * @param {any} val\n */\nexports.config = configGetSet;\n\n\nObject.defineProperty( exports, 'userData', {\n  get: function () {\n    if ( currentUser ) return currentUser.data || {};\n    return {};\n  },\n  set: function () {},\n  configurable: true,\n  enumerable: true\n} );\n\n\n\n\n\n\nrequire( \"polyfill.promise\" );\nvar Cfg = require( \"$\" ).config;\n\nvar Storage = require( \"tfw.storage\" );\n\nvar currentUser = null;\nvar config = {\n  // In `package.json`, you can override the services URL.\n  // { \"tfw\": { \"consts\": { \"debug\": \"tfw\", \"release\": \"http://tolokoban.org/tfw\" } } }\n  url: typeof Cfg.consts.tfw === 'string' ? Cfg.consts.tfw : \"tfw\"\n};\nvar saved = Storage.local.get( \"nigolotua\" );\nif ( Array.isArray( saved ) ) {\n  config.usr = saved[ 0 ];\n  config.pwd = saved[ 1 ];\n}\n\nfunction svc( name, args, url ) {\n  console.info( \"[tfw.web-service]\", name, args );\n  return new Promise(\n    function ( resolve, reject ) {\n      if ( typeof url === 'undefined' ) url = config.url;\n      var that = this;\n      var xhr = new XMLHttpRequest( {\n        mozSystem: true\n      } );\n      if ( 'withCredentials' in xhr ) {\n        xhr.open( \"POST\", url + \"/svc.php\", true );\n        xhr.withCredentials = true; // Indispensable pour le CORS.\n      } else {\n        // IE\n        xhr = new XDomainRequest();\n        xhr.open( \"POST\", url + \"/svc.php\" );\n      }\n      xhr.onload = function () {\n        if ( xhr.status != 200 ) {\n          return reject( {\n            id: exports.HTTP_ERROR,\n            msg: \"(\" + xhr.status + \") \" + xhr.statusText,\n            status: xhr.status\n          } );\n        }\n        var value = xhr.responseText;\n        if ( typeof value === \"string\" ) {\n          if ( value.substr( 0, 1 ) == \"!\" ) {\n            reject( {\n              id: exports.BAD_ROLE,\n              err: Error( \"Service \\\"\" + name + \"\\\" needs role \\\"\" +\n                          value.substr( 1 ) + \"\\\"!\" )\n            } );\n          }\n          var valueObject;\n          try {\n            valueObject = JSON.parse( value );\n          } catch ( ex ) {\n            console.error( \"[tfw.web-service:svc] Value = \", value );\n            reject( {\n              id: exports.BAD_TYPE,\n              err: Error( \"Service \\\"\" + name +\n                          \"\\\" should return a valid JSON!\\n\" + ex )\n            } );\n          }\n          resolve( valueObject );\n        } else {\n          reject( {\n            id: exports.BAD_TYPE,\n            err: Error( \"Service \\\"\" + name + \"\\\" should return a string!\" )\n          } );\n        }\n      };\n      xhr.onerror = function () {\n        reject( {\n          id: exports.HTTP_ERROR,\n          err: \"HTTP_ERROR (\" + xhr.status + \") \" + xhr.statusText,\n          status: xhr.status\n        } );\n      };\n      var params = \"s=\" + encodeURIComponent( name );\n      if ( typeof args !== 'undefined' ) {\n        params += \"&i=\" + encodeURIComponent( JSON.stringify( args ) );\n      }\n      xhr.setRequestHeader(\n        \"Content-type\",\n        \"application/x-www-form-urlencoded\" );\n      xhr.withCredentials = true; // Indispensable pour le CORS.\n      xhr.send( params );\n    }\n  );\n}\n/**\n * Load a JSON file and return a Promise.\n * @param {string} path Local path relative to the current HTML page.\n */\nfunction loadJSON( path ) {\n  return new Promise( function ( resolve, reject ) {\n    var xhr = new XMLHttpRequest( {\n      mozSystem: true\n    } );\n    xhr.onload = function () {\n      var text = xhr.responseText;\n      try {\n        resolve( JSON.parse( text ) );\n      } catch ( ex ) {\n        reject( Error( \"Bad JSON format for \\\"\" + path + \"\\\"!\\n\" + ex + \"\\n\" + text ) );\n      }\n    };\n    xhr.onerror = function () {\n      reject( Error( \"Unable to load file \\\"\" + path + \"\\\"!\\n\" + xhr.statusText ) );\n    };\n    xhr.open( \"GET\", path, true );\n    xhr.withCredentials = true; // Indispensable pour le CORS.\n    xhr.send();\n  } );\n};\n\n\n/**\n * @return If there is a user connected or not.\n */\nfunction isLogged() {\n  if ( !currentUser ) return false;\n  return true;\n};\n\n/**\n * Disconnect current user.\n * @return {Promise} A _thenable_ object resolved as soon as the server answered.\n */\nfunction logout() {\n  currentUser = null;\n  delete config.usr;\n  delete config.pwd;\n  Storage.local.set( \"nigolotua\", null );\n  exports.eventChange.fire();\n  return svc( \"tfw.login.Logout\" );\n};\n\n/**\n * Try to connect a user.\n * @param {string} usr Login name.\n * @param {string} pwd Password.\n * @return {Promise}\n *\n */\nfunction login( usr, pwd ) {\n  if ( typeof usr === 'undefined' ) usr = config.usr;\n  if ( typeof pwd === 'undefined' ) pwd = config.pwd;\n\n  return new Promise(\n    function ( resolve, reject ) {\n      if ( typeof usr === 'undefined' ) {\n        var autologin = Storage.local.get( \"nigolotua\" );\n        if ( !Array.isArray( autologin ) ) return reject( {\n          id: exports.MISSING_AUTOLOGIN\n        } );\n        usr = autologin[ 0 ];\n        pwd = autologin[ 1 ];\n      }\n      Storage.local.set( \"nigolotua\", null );\n      svc( \"tfw.login.Challenge\", usr )\n        .then(\n          function ( code ) {\n            // Hashage du mot de passe Ã  l'aide du code.\n            var output = [\n              0, 0, 0, 0,\n              0, 0, 0, 0,\n              0, 0, 0, 0,\n              0, 0, 0, 0\n            ],\n                i, j = 0,\n                pass = [],\n                k1, k2, k3;\n            for ( i = 0; i < pwd.length; i++ ) {\n              pass.push( pwd.charCodeAt( i ) );\n            }\n            if ( 256 % pass.length == 0 ) {\n              pass.push( 0 );\n            }\n\n            for ( i = 0; i < 256; i++ ) {\n              output[ i % 16 ] ^= i + pass[ i % pass.length ];\n              k1 = code[ j++ % code.length ] % 16;\n              k2 = code[ j++ % code.length ] % 16;\n              k3 = code[ j++ % code.length ] % 16;\n              output[ k3 ] ^= ( output[ k3 ] + 16 * k2 + k3 ) % 256;\n              output[ k2 ] ^= ( output[ k1 ] + output[ k3 ] ) % 256;\n            }\n            return svc( \"tfw.login.Response\", output );\n          },\n          reject\n        )\n        .then(\n          function ( user ) {\n            console.info( \"[tfw.web-service] user=...\", user );\n            if ( typeof user === 'object' ) {\n              currentUser = {\n                data: user,\n                hasRole: function ( role ) {\n                  for ( var i = 0; i < user.roles.length; i++ ) {\n                    var item = user.roles[ i ];\n                    if ( item == role ) return true;\n                  }\n                  return false;\n                }\n              };\n              Storage.local.set( \"nigolotua\", [ usr, pwd ] );\n              exports.eventChange.fire();\n              resolve( user );\n            } else {\n              currentUser = null;\n              reject( {\n                id: exports.UNKNOWN_USER,\n                err: \"Unknown user '\" + usr + \"'!\"\n              } );\n            }\n          },\n          reject\n        );\n    }\n  );\n};\n\n/**\n * Call a webservice.\n */\nfunction callWebService( name, args, url ) {\n  return new Promise(\n    function ( resolve, reject ) {\n      svc( name, args, url ).then(\n        resolve,\n        function ( err ) {\n          if ( typeof err === 'object' && err.id == exports.BAD_ROLE ) {\n            // Echec de connexion, on retente de se connecter avant d'abandonner.\n            login().then(\n              function () {\n                svc( name, args, url ).then( resolve, reject );\n              },\n              reject\n            );\n          } else {\n            reject( err );\n          }\n        }\n      );\n    }\n  );\n};\n\nfunction isAdmin() {\n  return hasRole( 'ADMIN' );\n};\n\nfunction hasRole( role ) {\n  if ( !currentUser ) return false;\n  return currentUser.hasRole( role );\n};\n\nfunction user () { return currentUser; };\n\nfunction configGetSet( key, val ) {\n  if ( typeof val === 'undefined' ) {\n    return config[ key ];\n  }\n  config[ key ] = val;\n  return val;\n};\n\n// _Backward compatibility.\nif ( window.$$ ) {\n  window.$$.service = function ( name, args, caller, onSuccess, onError ) {\n    var p = exports.get( name, args );\n    p.then(\n      function ( value ) {\n        if ( onSuccess ) {\n          return caller[ onSuccess ].call( caller, value );\n        }\n        return value;\n      },\n      function ( reason ) {\n        if ( onError ) {\n          return caller[ onError ].call( caller, reason );\n        }\n        return reason;\n      }\n    );\n  };\n}\n\n\nvar properties = {\n  userID: function () {\n    if ( !currentUser ) return 0;\n    return currentUser.data.id;\n  },\n  userLogin: function () {\n    if ( !currentUser ) return null;\n    return currentUser.data.login;\n  },\n  userName: function () {\n    if ( !currentUser ) return null;\n    return currentUser.data.name;\n  }\n};\n\nfor ( var key in properties ) {\n  Object.defineProperty( exports, key, {\n    get: properties[ key ],\n    set: function ( v ) {\n      throw Error( \"Property \" + key + \" is read-only!\" );\n    },\n    configurable: true,\n    enumerable: true\n  } );\n}\n\n\n  \nmodule.exports._ = _;\n});"],"names":["require","module","exports","svc","name","args","url","console","info","Promise","resolve","reject","config","xhr","XMLHttpRequest","mozSystem","open","withCredentials","XDomainRequest","onload","status","id","HTTP_ERROR","msg","statusText","value","responseText","substr","BAD_ROLE","err","Error","valueObject","JSON","parse","ex","error","BAD_TYPE","onerror","params","encodeURIComponent","stringify","setRequestHeader","send","loadJSON","path","text","isLogged","currentUser","logout","usr","pwd","Storage","local","set","eventChange","fire","login","autologin","get","Array","isArray","MISSING_AUTOLOGIN","then","code","i","k1","k2","k3","output","j","pass","length","push","charCodeAt","user","data","hasRole","role","roles","UNKNOWN_USER","callWebService","isAdmin","configGetSet","key","val","_","X","D","arguments","en","intl","all","CONNECTION_FAILURE","changeEvent","Object","defineProperty","configurable","enumerable","Cfg","consts","tfw","saved","window","$$","service","caller","onSuccess","onError","call","reason","properties","userID","userLogin","userName","v"],"mappings":"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"},"dependencies":["mod/$","mod/tfw.listeners","mod/polyfill.promise","mod/$","mod/tfw.storage"]}